name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        ./gradlew bootJar
        docker build -t aa/aa:latest .
        docker push aa/aa:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SSH pass
      run: sudo apt-get install -y sshpass

    - name: Deploy to EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        sshpass -e ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
          docker pull aa/aa:latest
          docker stop $(docker ps -q --filter ancestor=aa/aa:latest) || true
          docker rm $(docker ps -a -q --filter ancestor=aa/aa:latest) || true
          nohup docker run -d -p 9090:9090 aa/aa:latest > log.out 2> err.out &
        EOF
